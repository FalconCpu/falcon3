Done:
For loops
Arrays
array bounds checking
array initializers - lambda
classes
methods
nullable types
flow typing
constant declarations
casts
constant folding in AST
+= -=
string comparisons
varargs...
break/continue
when statements
array initializers - new Array<Int>[1,2,3]
infer Array type from initializer/lambda
if expressions
destructors (free operator)
abort instruction
enums
function overloading


Short term:
unsafe blocks
?: !! and .? operators
public/private
static class fields
static methods
default arguments to functions
fallthrough in function with return type should be error


Longer term:
tuples
inline arrays/structs
inheritance
extension functions
const propagation in IR
CSE optimisation
bounds check elision
floating point
more thorough pathContext checking in loops (iterate to fixed point)
enums with data values